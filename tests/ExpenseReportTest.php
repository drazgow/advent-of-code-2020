<?php

declare(strict_types=1);

namespace Tests;

use PHPUnit\Framework\TestCase;

use Aoc\YearFinder;
use Aoc\ExpenseReport;

class ExpenseReportTest extends TestCase
{
    private array $expenses = [];

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->expenses = [
            "1721",
            "979",
            "366",
            "299",
            "675",
            "1456",
        ];
    }

    public function testExpenseReportWithTwo()
    {
        $report = new ExpenseReport();
        $result = $report->find(["1721", "299"]);
        $this->assertSame(514579, $result);
    }

    public function testExpenseReportWithThree()
    {
        $report = new ExpenseReport();
        $result = $report->find(["979", "366", "675"]);
        $this->assertSame(241861950, $result);
    }

    public function testExpenseWithTwo()
    {
        $expense = new YearFinder();
        $result = $expense->find(2020, $this->expenses);

        sort($result);
        $this->assertSame(["299", "1721"], $result);
    }

    public function testExpenseWithTwoLoops()
    {
        $expense = new YearFinder();
        $result = $expense->find2Loops(2020, $this->expenses);

        sort($result);
        $this->assertSame(["299", "1721"], $result);
    }

    public function testExpenseWithTwoLoopsBoost()
    {
        $expense = new YearFinder();
        $result = $expense->find2Boost(2020, $this->expenses);

        sort($result);
        $this->assertSame(["299", "1721"], $result);
    }

    public function testExpenseWithThree()
    {
        $expense = new YearFinder(3);
        $result = $expense->find(2020, $this->expenses);

        sort($result);
        $this->assertSame(["366", "675", "979"], $result);
    }
}
